on:
  push:
    branches:
      - release-please--branches--main

permissions:
  contents: write
  pull-requests: write

name: update-pyproject-version

jobs:
  update-pyproject-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Update pyproject.toml version
        run: |
          # Install required Python packages
          pip install tomli tomli-w

          # Get the new version from manifest.json (updated by Release Please)
          NEW_VERSION=$(python3 -c "
          import json
          with open('custom_components/kubernetes/manifest.json', 'r') as f:
              data = json.load(f)
          print(data['version'])
          ")

          echo "Updating pyproject.toml to version: $NEW_VERSION"

          # Update the version in pyproject.toml using Python
          python3 -c "
          import tomli
          import tomli_w

          # Read current pyproject.toml
          with open('pyproject.toml', 'rb') as f:
              data = tomli.load(f)

          # Update version
          data['project']['version'] = '$NEW_VERSION'

          # Write back
          with open('pyproject.toml', 'wb') as f:
              tomli_w.dump(data, f)
          "

          # Commit and push the changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit -m "chore: update version to $NEW_VERSION [skip ci]"
          git push
