[build-system]
requires = [
    "setuptools>=64.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "homeassistant-kubernetes"
version = "0.5.0"
description = "Home Assistant integration for Kubernetes monitoring"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Timo Hankamer", email = "huts-belay7o@icloud.com" },
]
keywords = [
    "homeassistant",
    "kubernetes",
    "monitoring",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Home Automation",
]
dependencies = [
    "kubernetes>=33.1.0",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.0.0",
    "pytest-benchmark>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.8.0",
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.3.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=24.8.0",
    "flake8-comprehensions>=3.15.0",
    "flake8-import-order>=0.18.2",
    "mypy>=1.17.1",
    "types-requests>=2.32.0",
    "types-PyYAML>=6.0.12",
    "bandit[toml]>=1.7.10",
    "safety>=3.6.0",
    "pre-commit>=4.0.1",
    "pip-tools>=7.4.1",
    "pip-audit>=2.7.3",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.44",
    "homeassistant>=2025.7.3",
    "importlib-metadata>=8.0.0",
]
quality = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.3.0",
    "mypy>=1.17.1",
    "bandit[toml]>=1.7.10",
]
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.44",
]

[tool.setuptools.packages.find]
include = [
    "custom_components*",
]

[tool.black]
line-length = 88
target-version = [
    "py311",
]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = [
    "custom_components",
]
known_third_party = [
    "homeassistant",
    "kubernetes",
    "aiohttp",
]
force_sort_within_sections = true
combine_as_imports = true

[tool.mypy]
python_version = "3.11"
platform = "linux"
show_error_codes = true
follow_imports = "normal"
local_partial_types = true
strict_optional = false
warn_redundant_casts = true
warn_unused_ignores = false
warn_unreachable = true
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = false
warn_no_return = false
ignore_missing_imports = true
allow_redefinition = true

[[tool.mypy.overrides]]
module = [
    "kubernetes.*",
    "homeassistant.*",
    "voluptuous.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "-v",
    "--tb=short",
    "--strict-config",
    "--strict-markers",
    "--cov=custom_components.kubernetes",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=50",
]
asyncio_mode = "auto"
pythonpath = [
    ".",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = [
    "custom_components/kubernetes",
]
omit = [
    "tests/*",
    "*/site-packages/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\(Protocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = [
    "tests",
    "build",
    "dist",
]
skips = [
    "B101",
    "B601",
]

[tool.bandit.assert_used]
skips = [
    "*_test.py",
    "*/test_*.py",
]

[tool.flake8]
max-line-length = 127
max-complexity = 10
ignore = [
    "E203",
    "W503",
    "E501",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",
    "W",
    "F",
    "I",
    "C",
    "B",
    "UP",
]
ignore = [
    "E501",
    "B008",
    "C901",
]

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401",
]
"tests/*" = [
    "S101",
]
